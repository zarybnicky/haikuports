SUMMARY="Generate documentation from source code"
DESCRIPTION="
Doxygen is the de facto standard tool for generating documentation from \
annotated C++ sources, but it also supports other popular programming \
languages such as C, Objective-C, C#, PHP, Java, Python, IDL (Corba and \
Microsoft flavors), Fortran, VHDL, Tcl, and to some extent D.
Doxygen can help you in three ways:
1. It can generate an on-line documentation browser (in HTML) and/or an \
off-line reference manual (in $\mbox{\LaTeX}$) from a set of documented source \
files. There is also support for generating output in RTF (MS-Word), \
PostScript, hyperlinked PDF, compressed HTML, and Unix man pages. The \
documentation is extracted directly from the sources, which makes it much \
easier to keep the documentation consistent with the source code.
2. You can configure doxygen to extract the code structure from undocumented \
source files. This is very useful to quickly find your way in large source \
distributions. Doxygen can also visualize the relations between the various \
elements by means of include dependency graphs, inheritance diagrams, and \
collaboration diagrams, which are all generated automatically.
3. You can also use doxygen for creating normal documentation (as I did for \
the doxygen user manual and web-site).
"
HOMEPAGE="http://www.doxygen.org" 
SRC_URI="http://ftp.stack.nl/pub/users/dimitri/doxygen-1.7.4.src.tar.gz"
CHECKSUM_MD5="ff908759ff7cd9464424b04ae6c68e48"
REVISION="1"
STATUS_HAIKU="stable"
DEPEND=""
BUILD()
{
	cd doxygen-1.7.4
	sed -i 's/MAN1DIR = man\/man1/MAN1DIR = documentation\/man\/man1/' Makefile.in
	./configure --prefix `finddir B_COMMON_DIRECTORY`
	make
}

INSTALL()
{
	cd doxygen-1.7.4
	make install
}
LICENSE="GNU GPL v2"
COPYRIGHT="1997-2011 Dimitri van Heesch"
